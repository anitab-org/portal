(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(3),o=n(7),a=(n(0),n(96)),i={id:"commit-message-style-guide",title:"Commit Message Style Guide"},c={unversionedId:"commit-message-style-guide",id:"commit-message-style-guide",isDocsHomePage:!1,title:"Commit Message Style Guide",description:"Commit Message Structure",source:"@site/docs/Commit-Message-Style-Guide.md",slug:"/commit-message-style-guide",permalink:"/commit-message-style-guide",editUrl:"https://github.com/anitab-org/portal/edit/master/docs/docs/Commit-Message-Style-Guide.md",version:"current",sidebar:"docs",previous:{title:"How To Contribute",permalink:"/how-to-contribute"},next:{title:"How to Test The Application",permalink:"/test-the-app"}},l=[{value:"Commit Message Structure",id:"commit-message-structure",children:[]},{value:"Title",id:"title",children:[]},{value:"Body",id:"body",children:[]}],s={toc:l};function u(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"commit-message-structure"},"Commit Message Structure"),Object(a.b)("p",null,"A commit message should consist of two distinct parts separated by a blank line: the ",Object(a.b)("inlineCode",{parentName:"p"},"title")," and an optional ",Object(a.b)("inlineCode",{parentName:"p"},"body"),". The layout looks like this:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"type: subject\n\nbody\n")),Object(a.b)("h2",{id:"title"},"Title"),Object(a.b)("p",null,"The title should consist of the ",Object(a.b)("inlineCode",{parentName:"p"},"type")," of the change and ",Object(a.b)("inlineCode",{parentName:"p"},"subject")," separated by a colon ",Object(a.b)("inlineCode",{parentName:"p"},":"),". Title should be no longer than 50 characters."),Object(a.b)("h4",{id:"type"},"Type"),Object(a.b)("p",null,"The type is contained within the title and can be one of these types:"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},"feat: a new feature"),Object(a.b)("li",{parentName:"ul"},"fix: a bug fix"),Object(a.b)("li",{parentName:"ul"},"docs: changes to documentation"),Object(a.b)("li",{parentName:"ul"},"style: formatting, missing semi colons, etc; no code change"),Object(a.b)("li",{parentName:"ul"},"refactor: refactoring production code"),Object(a.b)("li",{parentName:"ul"},"test: adding tests, refactoring test; no production code change"),Object(a.b)("li",{parentName:"ul"},"chore: updating build tasks, package manager configs, etc; no production code change")),Object(a.b)("h4",{id:"subject"},"Subject"),Object(a.b)("p",null,"Should begin with a capital letter and not end with a period."),Object(a.b)("p",null,"Use an imperative tone to describe what a commit does, rather than what it did. For example, use change; not changed or changes."),Object(a.b)("h2",{id:"body"},"Body"),Object(a.b)("p",null,"If the changes made in a commit are complex, they should be explained in the commit body. Use the body to explain the what and why of a commit, not the how."),Object(a.b)("p",null,"When writing a body, the blank line between the title and the body is required and you should limit the length of each line to no more than 72 characters."),Object(a.b)("h4",{id:"examples"},"Examples"),Object(a.b)("p",null,"Without body"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"docs: update screenshots in the documentation\n")),Object(a.b)("p",null,"or"),Object(a.b)("p",null,"With body"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{}),"fix: fix crash caused by new libraries\n\nAfter merging PRs #126 and #130 crashes were occurring.\nThese crashes were because of deprecated functions.\nFound a solution here (https://stackoverflow.com/questions/22718185)\nThis will resolve issue #140\n")))}u.isMDXComponent=!0},96:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return m}));var r=n(0),o=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=o.a.createContext({}),u=function(e){var t=o.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=u(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),b=u(n),d=r,m=b["".concat(i,".").concat(d)]||b[d]||p[d]||a;return n?o.a.createElement(m,c(c({ref:t},s),{},{components:n})):o.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<a;s++)i[s]=n[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);